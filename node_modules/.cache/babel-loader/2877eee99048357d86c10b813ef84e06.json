{"ast":null,"code":"var _jsxFileName = \"/Users/fernandocamargodelbuono/_dev/odywalia/src/components/fields/checkbox/index.js\";\nimport React, { useCallback, useMemo } from 'react';\nimport { Checkbox as Input, FormControlLabel } from '@material-ui/core';\n\nconst Item = ({\n  label\n}) => /*#__PURE__*/React.createElement(FormControlLabel, {\n  key: index,\n  control: /*#__PURE__*/React.createElement(Input, {\n    checked: false,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 14\n    }\n  }),\n  label: label,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n});\n\nconst Checkbox = ({\n  onChange: change,\n  label,\n  value,\n  options\n}) => {\n  /*\n  const checked = useMemo(() => !!value, [value]);\n  const onChange = useCallback(({ target: { checked } }) => change(checked), [\n    change,\n  ]);\n   return (\n    <FormControlLabel\n      control={<Input checked={checked} onChange={onChange} color=\"primary\" />}\n      label={label}\n    />\n  );\n  */\n  const items = useMemo(() => options || [{\n    label,\n    value\n  }], [options, label, value]);\n  const renderItem = useCallback((item, index) => /*#__PURE__*/React.createElement(Item, Object.assign({\n    key: index\n  }, item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }\n  })), []);\n  return items.map(renderItem);\n};\n\nCheckbox.propTypes = {};\nCheckbox.defaultProps = {};\nexport default Checkbox;","map":{"version":3,"sources":["/Users/fernandocamargodelbuono/_dev/odywalia/src/components/fields/checkbox/index.js"],"names":["React","useCallback","useMemo","Checkbox","Input","FormControlLabel","Item","label","index","onChange","change","value","options","items","renderItem","item","map","propTypes","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,QAAQ,IAAIC,KAArB,EAA4BC,gBAA5B,QAAoD,mBAApD;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACX,oBAAC,gBAAD;AACE,EAAA,GAAG,EAAEC,KADP;AAEE,EAAA,OAAO,eAAE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,KAAhB;AAAuB,IAAA,KAAK,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFX;AAGE,EAAA,KAAK,EAAED,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAQA,MAAMJ,QAAQ,GAAG,CAAC;AAAEM,EAAAA,QAAQ,EAAEC,MAAZ;AAAoBH,EAAAA,KAApB;AAA2BI,EAAAA,KAA3B;AAAkCC,EAAAA;AAAlC,CAAD,KAAiD;AAChE;;;;;;;;;;;;AAaA,QAAMC,KAAK,GAAGX,OAAO,CAAC,MAAMU,OAAO,IAAI,CAAC;AAAEL,IAAAA,KAAF;AAASI,IAAAA;AAAT,GAAD,CAAlB,EAAsC,CACzDC,OADyD,EAEzDL,KAFyD,EAGzDI,KAHyD,CAAtC,CAArB;AAKA,QAAMG,UAAU,GAAGb,WAAW,CAC5B,CAACc,IAAD,EAAOP,KAAP,kBAAiB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA;AAAX,KAAsBO,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADW,EAE5B,EAF4B,CAA9B;AAKA,SAAOF,KAAK,CAACG,GAAN,CAAUF,UAAV,CAAP;AACD,CAzBD;;AA2BAX,QAAQ,CAACc,SAAT,GAAqB,EAArB;AAEAd,QAAQ,CAACe,YAAT,GAAwB,EAAxB;AAEA,eAAef,QAAf","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { Checkbox as Input, FormControlLabel } from '@material-ui/core';\n\nconst Item = ({ label }) => (\n  <FormControlLabel\n    key={index}\n    control={<Input checked={false} color=\"primary\" />}\n    label={label}\n  />\n);\n\nconst Checkbox = ({ onChange: change, label, value, options }) => {\n  /*\n  const checked = useMemo(() => !!value, [value]);\n  const onChange = useCallback(({ target: { checked } }) => change(checked), [\n    change,\n  ]);\n\n  return (\n    <FormControlLabel\n      control={<Input checked={checked} onChange={onChange} color=\"primary\" />}\n      label={label}\n    />\n  );\n  */\n  const items = useMemo(() => options || [{ label, value }], [\n    options,\n    label,\n    value,\n  ]);\n  const renderItem = useCallback(\n    (item, index) => <Item key={index} {...item} />,\n    []\n  );\n\n  return items.map(renderItem);\n};\n\nCheckbox.propTypes = {};\n\nCheckbox.defaultProps = {};\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}